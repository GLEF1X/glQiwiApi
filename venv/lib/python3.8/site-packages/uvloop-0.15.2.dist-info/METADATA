Metadata-Version: 2.1
Name: uvloop
Version: 0.15.2
Summary: Fast implementation of asyncio event loop on top of libuv
Home-page: http://github.com/MagicStack/uvloop
Author: Yury Selivanov
Author-email: yury@magic.io
License: MIT
Platform: macOS
Platform: POSIX
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: AsyncIO
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: License :: OSI Approved :: Apache Software License
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Requires-Python: >=3.7
Provides-Extra: dev
Requires-Dist: Cython (<0.30.0,>=0.29.20) ; extra == 'dev'
Requires-Dist: pytest (>=3.6.0) ; extra == 'dev'
Requires-Dist: Sphinx (~=1.7.3) ; extra == 'dev'
Requires-Dist: sphinxcontrib-asyncio (~=0.2.0) ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme (~=0.2.4) ; extra == 'dev'
Requires-Dist: aiohttp ; extra == 'dev'
Requires-Dist: flake8 (~=3.8.4) ; extra == 'dev'
Requires-Dist: psutil ; extra == 'dev'
Requires-Dist: pycodestyle (~=2.6.0) ; extra == 'dev'
Requires-Dist: pyOpenSSL (~=19.0.0) ; extra == 'dev'
Requires-Dist: mypy (>=0.800) ; extra == 'dev'
Provides-Extra: docs
Requires-Dist: Sphinx (~=1.7.3) ; extra == 'docs'
Requires-Dist: sphinxcontrib-asyncio (~=0.2.0) ; extra == 'docs'
Requires-Dist: sphinx-rtd-theme (~=0.2.4) ; extra == 'docs'
Provides-Extra: test
Requires-Dist: aiohttp ; extra == 'test'
Requires-Dist: flake8 (~=3.8.4) ; extra == 'test'
Requires-Dist: psutil ; extra == 'test'
Requires-Dist: pycodestyle (~=2.6.0) ; extra == 'test'
Requires-Dist: pyOpenSSL (~=19.0.0) ; extra == 'test'
Requires-Dist: mypy (>=0.800) ; extra == 'test'

.. image:: https://img.shields.io/github/workflow/status/MagicStack/uvloop/Tests
    :target: https://github.com/MagicStack/uvloop/actions?query=workflow%3ATests+branch%3Amaster

.. image:: https://img.shields.io/pypi/v/uvloop.svg
    :target: https://pypi.python.org/pypi/uvloop

.. image:: https://pepy.tech/badge/uvloop
    :target: https://pepy.tech/project/uvloop
    :alt: PyPI - Downloads


uvloop is a fast, drop-in replacement of the built-in asyncio
event loop.  uvloop is implemented in Cython and uses libuv
under the hood.

The project documentation can be found
`here <http://uvloop.readthedocs.org/>`_.  Please also check out the
`wiki <https://github.com/MagicStack/uvloop/wiki>`_.


Performance
-----------

uvloop makes asyncio 2-4x faster.

.. image:: https://raw.githubusercontent.com/MagicStack/uvloop/master/performance.png
    :target: http://magic.io/blog/uvloop-blazing-fast-python-networking/

The above chart shows the performance of an echo server with different
message sizes.  The *sockets* benchmark uses ``loop.sock_recv()`` and
``loop.sock_sendall()`` methods; the *streams* benchmark uses asyncio
high-level streams, created by the ``asyncio.start_server()`` function;
and the *protocol* benchmark uses ``loop.create_server()`` with a simple
echo protocol.  Read more about uvloop in a
`blog post <http://magic.io/blog/uvloop-blazing-fast-python-networking/>`_
about it.


Installation
------------

uvloop requires Python 3.7 or greater and is available on PyPI.
Use pip to install it::

    $ pip install uvloop

Note that it is highly recommended to **upgrade pip before** installing
uvloop with::

    $ pip install -U pip


Using uvloop
------------

Call ``uvloop.install()`` before calling ``asyncio.run()`` or
manually creating an asyncio event loop:

.. code:: python

    import asyncio
    import uvloop

    async def main():
        # Main entry-point.
        ...

    uvloop.install()
    asyncio.run(main())


Building From Source
--------------------

To build uvloop, you'll need Python 3.7 or greater:

1. Clone the repository:

   .. code::

    $ git clone --recursive git@github.com:MagicStack/uvloop.git
    $ cd uvloop

2. Create a virtual environment and activate it:

   .. code::

    $ python3.7 -m venv uvloop-dev
    $ source uvloop-dev/bin/activate

3. Install development dependencies:

   ..  code::

    $ pip install -e .[dev]

4. Build and run tests:

   .. code::

    $ make
    $ make test


License
-------

uvloop is dual-licensed under MIT and Apache 2.0 licenses.


