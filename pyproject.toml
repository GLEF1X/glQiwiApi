[tool.poetry]
name = "glQiwiApi"
version = "2.0.0b1"
description = "The ultrarapid and multifunctional wrapper over QIWI and YooMoney"
authors = [
    "Gleb Garanin <glebgar567@gmail.com>"
]
repository = "https://github.com/GLEF1X/glQiwiApi"
documentation = "https://glqiwiapi.readthedocs.io/en/latest/"
packages = [
    { include = "./glQiwiApi" }
]
readme = 'README.md'
maintainers = [
    "GLEF1X <glebgar567@gmail.com>",
]
keywords = [
    "qiwi",
    "yoomoney",
    "api",
    "yoo_money",
    "wrapper",
    "asyncio",
]
license = "MIT"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Framework :: AsyncIO",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.7"
pytz = "2021.3"
aiohttp = "^3.8.0"
wheel = "^0.36.2"
pydantic = "^1.9.0"
typing_extensions = { version = "^3.10.0.2", python = "<=3.7" }

# Fast
uvloop = { version = "^0.16.0", markers = "sys_platform == 'darwin' or sys_platform == 'linux'", optional = true }
aiofiles = { version = "^0.8.0", optional = true}

# integrations
aiogram = { version = "^2.18", optional = true}
cryptography = { version = "^36.0.1", optional = true}  # for self-signed certificates


[tool.poetry.dev-dependencies]
# tests
pytest-mock = "^3.6.1"
pytest = "^6.2.5"
pytest-asyncio = "^0.16.0"
pytest-cov = "^3.0.0"
pytest-lazy-fixture = "^0.6.3"
pytest-aiohttp = "^0.3.0"
timeout-decorator = "^0.5.0"

# Docs
Sphinx = { version = "^4.2.0" }
sphinx-intl = { version = "^2.0.1" }
sphinx-autobuild = { version = "^2021.3.14" }
sphinx-copybutton = { version = "^0.4.0" }
furo = { version = "^2022.1.2" }
sphinx-prompt = { version = "^1.5.0" }
Sphinx-Substitution-Extensions = { version = "^2020.9.30" }
towncrier = { version = "^21.3.0" }
pygments = { version = "^2.11.2" }
pymdown-extensions = { version = "^9.1" }
markdown-include = { version = "^0.6" }
sphinxemoji = "^0.2.0"
sphinxcontrib-mermaid = "^0.7.1"
sphinx-notfound-page = "^0.8"


# development
black = { version = "^21.11b1", python = ">=3.6" }
isort = "^5.8.0"
mypy = "^0.931"
flake8 = "^4.0.1"
asynctest = "^0.13.0"
async-timeout = "^4.0.2"

# For CI and mypy
types-orjson = "^3.6.2"
types-aiofiles = "^0.8.2"
types-pytz = "^2021.3.3"

[tool.black]
line-length = 99
target-version = ['py37', 'py38', 'py39']
exclude = '''
(
    \.eggs
  | \.git
  | \.tox
  | build
  | dist
  | venv
  | docs
)
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 99
known_third_party = [
    "aiofiles",
    "aiohttp",
    "aiohttp_socks",
    "aresponses",
    "packaging",
    "pkg_resources",
    "pydantic",
    "pytest"
]

[tool.towncrier]
package = "aiogram"
filename = "CHANGES.rst"
directory = "CHANGES/"
template = "CHANGES/.template.rst.jinja2"
issue_format = "`#{issue} <https://github.com/aiogram/aiogram/issues/{issue}>`_"

[[tool.towncrier.section]]
path = ""

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "removal"
name = "Deprecations and Removals"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Misc"
showcontent = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
