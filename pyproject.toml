[tool.poetry]
name = "glQiwiApi"
version = "2.18.1"
description = "The ultrarapid and multifunctional wrapper over QIWI and YooMoney"
authors = [
    "Glib Garanin <glebgar567@gmail.com>"
]
repository = "https://github.com/GLEF1X/glQiwiApi"
documentation = "https://glqiwiapi.readthedocs.io/en/latest/"
packages = [
    { include = "./glQiwiApi" }
]
readme = 'README.md'
maintainers = [
    "GLEF1X <glebgar567@gmail.com>",
]
keywords = [
    "qiwi",
    "yoomoney",
    "api",
    "yoo_money",
    "wrapper",
    "asyncio",
]
license = "MIT"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Framework :: AsyncIO",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.7"
"backports.zoneinfo" = { version = "^0.2.1", python = "<3.9" }
tzdata = "^2022.6"
aiohttp = "^3.8.3"
pydantic = "^1.10.2"
typing_extensions = { version = "^4.0.1", python = "<=3.7" }

# Fast
uvloop = { version = "^0.16.0", markers = "sys_platform == 'darwin' or sys_platform == 'linux'", optional = true }
aiofiles = { version = "^22.1.0", optional = true }

# Docs
Sphinx = { version = "^4.3.2", optional = true }
sphinx-intl = { version = "^2.0.1", optional = true }
sphinx-autobuild = { version = "^2021.3.14", optional = true }
sphinx-copybutton = { version = "^0.5.0", optional = true }
furo = { version = "^2022.2.23", optional = true }
sphinx-prompt = { version = "^1.5.0", optional = true }
Sphinx-Substitution-Extensions = { version = ">=2020.9.30,<2023.0.0", optional = true }
towncrier = { version = "^21.9.0", optional = true }
pygments = { version = "^2.4", optional = true }
pymdown-extensions = { version = "^9.4", optional = true }
markdown-include = { version = ">=0.6,<0.8", optional = true }
sphinxemoji = { version = "*", optional = true }
sphinx-notfound-page = { version = "*", optional = true }



[tool.poetry.dev-dependencies]
# tests
pytest-mock = "^3.8.2"
pytest = "^7.0.1"
pytest-asyncio = "^0.20.1"
pytest-cov = "^4.0.0"
pytest-lazy-fixture = "^0.6.3"
pytest-aiohttp = "^1.0.4"
timeout-decorator = "^0.5.0"
asynctest = "^0.13.0"
pytest-timeout = "^2.1.0"
pytest-benchmark = { version = "^4.0.0", extras = ["histogram"] }

# development
black = { version = "^22.6.0", python = ">=3.6" }
isort = "^5.8.0"
mypy = "^0.982"
flake8 = "^5.0.4"
async-timeout = "^4.0.2"


# For CI and mypy
types-orjson = "^3.6.2"
types-pytz = "^2022.1.1"
types-aiofiles = "^22.1.0"
aiogram = "^2.21"
cryptography = "^38.0.1"
aiofiles = "^22.1.0"

[tool.poetry.extras]
fast = ["uvloop", "aiofiles"]
docs = [
    "sphinx",
    "sphinx-intl",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "furo",
    "black",
    "sphinx-prompt",
    "Sphinx-Substitution-Extensions",
    "towncrier",
    "pygments",
    "pymdown-extensions",
    "markdown-include",
    "sphinxemoji",
    "sphinx-notfound-page",
]

[tool.black]
line-length = 99
target-version = ['py37', 'py38', 'py39']
skip-string-normalization = true
exclude = '''
(
    \.eggs
  | \.git
  | \.tox
  | build
  | dist
  | venv
  | docs
)
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 99
known_third_party = [
    "aiofiles",
    "aiohttp",
    "aiohttp_socks",
    "aresponses",
    "packaging",
    "pkg_resources",
    "pydantic",
    "pytest"
]

[tool.mypy]
plugins = "pydantic.mypy"
python_version = 3.8
show_error_codes = true
show_error_context = true
pretty = true
ignore_missing_imports = false
warn_unused_configs = true
disallow_subclassing_any = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
follow_imports_for_stubs = true
namespace_packages = true
show_absolute_path = true

[[tool.mypy.overrides]]
module = "uvloop"
ignore_missing_imports = true

[tool.coverage]
exclude_lines = """
    pragma: no cover
    @abstractmethod
    @abc.abstractmethod
    type: ignore
    raise NotImplementedError
    def __repr__
    def __str__
    class .*\bProtocol):
    pass"""
omit = """
    glQiwiApi/ext/*
    */site-packages/*
    */tests/*
    */.eggs/*
    glQiwiApi/utils/mypy_hacks.py
    glQiwiApi/utils/compat.py
    glQiwiApi/utils/payload.py
    glQiwiApi/qiwi/clients/wrapper.py
    glQiwiApi/utils/deprecated.py
    glQiwiApi/utils/date_conversion.py
    glQiwiApi/utils/synchronous.py
    glQiwiApi/core/cache
"""


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
