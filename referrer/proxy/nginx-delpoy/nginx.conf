worker_processes    auto;

events {
  multi_accept on;
  worker_connections 1024;
  use epoll;
}

http {
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/mime.types;
    access_log /dev/stdout;
    default_type application/octet-stream;
    access_log off;
    error_log /var/log/nginx/error.log crit;
    keepalive_timeout 30;
    keepalive_requests 100;
    client_max_body_size 1m;
    client_body_timeout 10;
    reset_timedout_connection on;
    send_timeout 2;
    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;
    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    charset utf-8;


    upstream backend {
        server backend:5000;
    }

    server {
        listen 80;
        listen 443 ssl;

        server_name ${DOMAIN_NAME_OR_IP};
        server_tokens off;

        add_header Referrer-Policy "no-referrer-when-downgrade";

        # https://certbot.eff.org/docs/using.html#where-certs
        ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME_OR_IP}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME_OR_IP}/privkey.pem;

        include /etc/letsencrypt/conf/options-ssl-nginx.conf;

        ssl_dhparam /etc/letsencrypt/conf/ssl-dhparams.pem;

        # Определяем, нужен ли редирект с www на без www'шную версию
        if ($server_port = 80) { set $https_redirect 1; }
        if ($host ~ '^www\.') { set $https_redirect 1; }
        if ($https_redirect = 1) { return 301 https://${DOMAIN_NAME_OR_IP}$request_uri; }

        location /.well-known/acme-challenge/ { root /var/www/certbot; }
        # Путь по которому certbot сможет проверить сервер на подлинность


        location / {
            proxy_pass http://backend;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_redirect off;
        }

    }
}