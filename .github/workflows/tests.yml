name: CI

on:
  push:
    branches: [ dev-1.x ]
  pull_request:
    branches: [ dev-1.x ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.7
          - 3.8
          - 3.9

    steps:
      - uses: actions/checkout@master

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.12
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ secrets.CACHE_VERSION }}


      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Install library
        run: poetry install --no-interaction

      - name: Lint with flake8
        run: |
          poetry run flake8 glQiwiApi examples tests --jobs=8 --ignore=E999,F401,E123
      
      - name: Check code-style (Black)
        run: |
          poetry run black --check --diff glQiwiApi tests

      - name: Mypy check
        run: |
          poetry run mypy --strict --implicit-reexport glQiwiApi

      - name: Test with pytest
        run: |
          poetry run pytest -p no:warnings --cov=glQiwiApi --cov-config .coveragerc --cov-report=xml
        env:
          API_ACCESS_TOKEN: ${{ secrets.API_ACCESS_TOKEN }}
          SECRET_P2P: ${{ secrets.SECRET_P2P }}
          PHONE_NUMBER: ${{ secrets.PHONE_NUMBER }}
          YOO_API_TOKEN: ${{ secrets.YOO_API_TOKEN }}

      - uses: codecov/codecov-action@v1
        with:
          file: coverage.xml
          flags: unittests
          name: py-${{ matrix.python-version }}-${{ matrix.os }}